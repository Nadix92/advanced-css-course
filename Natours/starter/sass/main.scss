$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;
$color-gray-dark: #777;
$color-white: #fff;
$color-black: #000;

*,
*::after,
*::before {
  margin: 0; /* Removes the defualt padding and margin on every element */
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%; /* Setting the Root font size */
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: $color-gray-dark;
  padding: 3rem;
  box-sizing: border-box; /* Makes borders and paddings no longer added to the total width and height that is spesified for a box  */
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url("../img/hero.jpg");
  background-size: cover; /* Will always try to fit the element inside the box */
  background-position: top; /* Makes the img stick on top */
  position: relative; /* set orgin position for children elements */
  /* Top left, Top Right, Bottom Right, Bottom Left || x = side ways, y = up/down */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;

  backface-visibility: hidden; /* Removes Shakeing in animation, we only see the front */
  margin-bottom: 6rem;

  &--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;

    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */
  }

  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out;
  }
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  80% {
    transform: translateX(1rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  80% {
    transform: translateX(-1rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.btn {
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block; /* Add this when we add padding height or widght to and element */
    border-radius: 10rem;
    transition: all 0.2s; /* All Property */
    position: relative;
    font-size: 1.6rem;
  }

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
    /* adds after only on hover */
    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active {
    /* translate is always from inittial e.g. btn orgianl pos */
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &--white {
    background-color: $color-white;
    color: $color-gray-dark;

    &::after {
      background-color: $color-white;
    }
  }

  &:after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    left: 0;
    top: 0;
    z-index: -1;
    transition: all 0.4s;
  }

  &--animated {
    /* ani-time, ani-func, ani-delay */
    animation: moveInBottom 0.5s ease-out 0.75s;
    animation-fill-mode: backwards; /* Auto apply animation at keyfarm 0 before animation starts */
  }
}
